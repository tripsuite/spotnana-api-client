/**
 * Trip API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { FareAmount } from './fareAmount';
import { FareComponentDetail } from './fareComponentDetail';
import { FlightFareBreakup } from './flightFareBreakup';
import { Money } from './money';
import { OtherAncillaryFare } from './otherAncillaryFare';

/**
* Info about booked itinerary
*/
export class Itinerary {
    /**
    * Total itinerary fare including flights, ancillaries and extras. This does not  include service fee 
    */
    'totalFare'?: FareAmount;
    /**
    * Total flights fare
    */
    'totalFlightsFare'?: FareAmount;
    /**
    * Total fare for seats
    */
    'totalSeatFare'?: Money;
    /**
    * Total fare for luggage
    */
    'totalLuggageFare'?: Money;
    /**
    * Total merchant fees
    */
    'totalMerchantFees'?: Money;
    /**
    * Total card or sevice fee charged by airline
    */
    'totalAirlineFees'?: Money;
    /**
    * Charges other than flight, seat and luggage
    */
    'otherCharges'?: Money;
    /**
    * Ticket level flight fare breakup
    */
    'flightFareBreakup'?: Array<FlightFareBreakup>;
    /**
    * List of fare component details for this itinerary
    */
    'fareComponents'?: Array<FareComponentDetail>;
    /**
    * Fare breakup for ancillaries other than seat and luggage
    */
    'otherAncillaryFares'?: Array<OtherAncillaryFare>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "totalFare",
            "baseName": "totalFare",
            "type": "FareAmount"
        },
        {
            "name": "totalFlightsFare",
            "baseName": "totalFlightsFare",
            "type": "FareAmount"
        },
        {
            "name": "totalSeatFare",
            "baseName": "totalSeatFare",
            "type": "Money"
        },
        {
            "name": "totalLuggageFare",
            "baseName": "totalLuggageFare",
            "type": "Money"
        },
        {
            "name": "totalMerchantFees",
            "baseName": "totalMerchantFees",
            "type": "Money"
        },
        {
            "name": "totalAirlineFees",
            "baseName": "totalAirlineFees",
            "type": "Money"
        },
        {
            "name": "otherCharges",
            "baseName": "otherCharges",
            "type": "Money"
        },
        {
            "name": "flightFareBreakup",
            "baseName": "flightFareBreakup",
            "type": "Array<FlightFareBreakup>"
        },
        {
            "name": "fareComponents",
            "baseName": "fareComponents",
            "type": "Array<FareComponentDetail>"
        },
        {
            "name": "otherAncillaryFares",
            "baseName": "otherAncillaryFares",
            "type": "Array<OtherAncillaryFare>"
        }    ];

    static getAttributeTypeMap() {
        return Itinerary.attributeTypeMap;
    }
}

