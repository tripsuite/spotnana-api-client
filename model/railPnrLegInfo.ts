/**
 * Trip API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { DateTimeLocal } from './dateTimeLocal';
import { DateTimeOffset } from './dateTimeOffset';
import { Duration } from './duration';
import { Length } from './length';
import { RailAllocatedSpace } from './railAllocatedSpace';
import { RailFareType } from './railFareType';
import { RailPnrAmenity } from './railPnrAmenity';
import { RailSeatPreferenceSelection } from './railSeatPreferenceSelection';
import { RailStationInfo } from './railStationInfo';
import { RailTravelClass } from './railTravelClass';
import { RailVehicle } from './railVehicle';
import { TravelerRailInfo } from './travelerRailInfo';

/**
* Leg info
*/
export class RailPnrLegInfo {
    /**
    * Space allocated for each passenger.
    */
    'allocatedSpaces'?: Array<RailAllocatedSpace>;
    'travelerRailInfo'?: Array<TravelerRailInfo>;
    /**
    * List of amenities available for the leg.
    */
    'amenities'?: Array<RailPnrAmenity>;
    /**
    * Date and time of arrival of the leg.
    */
    'arriveAt'?: DateTimeOffset;
    /**
    * Date and time of departure of the leg.
    */
    'departAt'?: DateTimeOffset;
    /**
    * Date and time of arrival of the leg in local time of the arrival station.
    */
    'arriveAtLocal'?: DateTimeLocal;
    /**
    * Date and time of departure of the leg in local time of the departure station.
    */
    'departAtLocal'?: DateTimeLocal;
    /**
    * Destination station name of the leg.
    */
    'destination': string;
    /**
    * Distance covered by the leg.
    */
    'distance'?: Length;
    /**
    * Duration of the leg.
    */
    'duration'?: Duration;
    /**
    * Details of fare for this leg.
    */
    'fareType': string;
    /**
    * Originating station name of the leg.
    */
    'origin': string;
    /**
    * Travel class for the leg.
    */
    'travelClass'?: RailTravelClass;
    /**
    * Vehicle used in the leg.
    */
    'vehicle': RailVehicle;
    /**
    * Information about origin station.
    */
    'originInfo'?: RailStationInfo;
    /**
    * Information about destination station.
    */
    'destinationInfo'?: RailStationInfo;
    /**
    * Captures Cancellation policy and Fair Rules
    */
    'railFareType'?: RailFareType;
    /**
    * ticket number
    */
    'ticketNumber'?: string;
    /**
    * carrier confirmation number for a segment
    */
    'carrierConfirmationNumber'?: string;
    /**
    * Selected Seat Preferences for the leg.
    */
    'seatPreferenceSelection'?: RailSeatPreferenceSelection;
    /**
    * Leg Id.
    */
    'legId'?: string;
    /**
    * Name of the vendor for which current leg is reserved
    */
    'vendorName'?: string;
    /**
    * CO2 emission for the current leg in gram for a single passenger.
    */
    'co2EmissionGramsPerPassenger'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "allocatedSpaces",
            "baseName": "allocatedSpaces",
            "type": "Array<RailAllocatedSpace>"
        },
        {
            "name": "travelerRailInfo",
            "baseName": "travelerRailInfo",
            "type": "Array<TravelerRailInfo>"
        },
        {
            "name": "amenities",
            "baseName": "amenities",
            "type": "Array<RailPnrAmenity>"
        },
        {
            "name": "arriveAt",
            "baseName": "arriveAt",
            "type": "DateTimeOffset"
        },
        {
            "name": "departAt",
            "baseName": "departAt",
            "type": "DateTimeOffset"
        },
        {
            "name": "arriveAtLocal",
            "baseName": "arriveAtLocal",
            "type": "DateTimeLocal"
        },
        {
            "name": "departAtLocal",
            "baseName": "departAtLocal",
            "type": "DateTimeLocal"
        },
        {
            "name": "destination",
            "baseName": "destination",
            "type": "string"
        },
        {
            "name": "distance",
            "baseName": "distance",
            "type": "Length"
        },
        {
            "name": "duration",
            "baseName": "duration",
            "type": "Duration"
        },
        {
            "name": "fareType",
            "baseName": "fareType",
            "type": "string"
        },
        {
            "name": "origin",
            "baseName": "origin",
            "type": "string"
        },
        {
            "name": "travelClass",
            "baseName": "travelClass",
            "type": "RailTravelClass"
        },
        {
            "name": "vehicle",
            "baseName": "vehicle",
            "type": "RailVehicle"
        },
        {
            "name": "originInfo",
            "baseName": "originInfo",
            "type": "RailStationInfo"
        },
        {
            "name": "destinationInfo",
            "baseName": "destinationInfo",
            "type": "RailStationInfo"
        },
        {
            "name": "railFareType",
            "baseName": "railFareType",
            "type": "RailFareType"
        },
        {
            "name": "ticketNumber",
            "baseName": "ticketNumber",
            "type": "string"
        },
        {
            "name": "carrierConfirmationNumber",
            "baseName": "carrierConfirmationNumber",
            "type": "string"
        },
        {
            "name": "seatPreferenceSelection",
            "baseName": "seatPreferenceSelection",
            "type": "RailSeatPreferenceSelection"
        },
        {
            "name": "legId",
            "baseName": "legId",
            "type": "string"
        },
        {
            "name": "vendorName",
            "baseName": "vendorName",
            "type": "string"
        },
        {
            "name": "co2EmissionGramsPerPassenger",
            "baseName": "co2EmissionGramsPerPassenger",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return RailPnrLegInfo.attributeTypeMap;
    }
}

export namespace RailPnrLegInfo {
}
