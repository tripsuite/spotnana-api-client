/**
 * Trip API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Air } from './air';
import { ApprovalInfo } from './approvalInfo';
import { BookingHistory } from './bookingHistory';
import { COGS } from './cOGS';
import { CTC } from './cTC';
import { CancellationRequestStatus } from './cancellationRequestStatus';
import { Car } from './car';
import { CreatedVia } from './createdVia';
import { CustomField } from './customField';
import { Document } from './document';
import { FareAmount } from './fareAmount';
import { FreshnessInfo } from './freshnessInfo';
import { Hotel } from './hotel';
import { InvoiceInfo } from './invoiceInfo';
import { LLFPnrInfo } from './lLFPnrInfo';
import { LimoInfo } from './limoInfo';
import { MiscInfo } from './miscInfo';
import { Money } from './money';
import { PaymentInfo1 } from './paymentInfo1';
import { PnrCancelRequestBookingEmailInfo } from './pnrCancelRequestBookingEmailInfo';
import { PnrCreationDetails } from './pnrCreationDetails';
import { PnrDataAdditionalMetadata } from './pnrDataAdditionalMetadata';
import { PnrDataExternalInfo } from './pnrDataExternalInfo';
import { PnrTraveler } from './pnrTraveler';
import { PolicyInfo } from './policyInfo';
import { PreBookAnswers } from './preBookAnswers';
import { Rail } from './rail';
import { SavingsFare } from './savingsFare';
import { ServiceFee } from './serviceFee';
import { ShellPnrInfo } from './shellPnrInfo';
import { SourceInfo } from './sourceInfo';
import { Traveler } from './traveler';
import { UserFacingStatus } from './userFacingStatus';

/**
* Pnr data with all information about a single booking containing one of Air, Hotel, Car, Rail, Limo or Miscellaneous PNR. 
*/
export class PnrData {
    /**
    * Current PNR version. This field is used for handling conflicts in case of concurrent  updates. This should be sent unmodified in update request. 
    */
    'version'?: number;
    'createdVia'?: CreatedVia;
    'initialVersionCreatedVia'?: CreatedVia;
    'sourceInfo'?: SourceInfo;
    /**
    * True if the billing is delayed
    */
    'invoiceDelayedBooking'?: boolean;
    'travelers'?: Array<Traveler>;
    /**
    * List of travelers on this pnr and their information. This is a required field.
    */
    'pnrTravelers'?: Array<PnrTraveler>;
    'costOfGoodsSold'?: COGS;
    'costToCustomer'?: CTC;
    /**
    * Indicates if finalize action has been performed on the pnr.
    */
    'isFinalized'?: boolean;
    /**
    * Policy related info for this booking
    */
    'policyInfo'?: PolicyInfo;
    /**
    * Air booking information
    */
    'airPnr'?: Air;
    /**
    * Hotel booking information
    */
    'hotelPnr'?: Hotel;
    /**
    * Car booking information
    */
    'carPnr'?: Car;
    /**
    * Rail booking information
    */
    'railPnr'?: Rail;
    /**
    * Limo booking information
    */
    'limoPnr'?: LimoInfo;
    /**
    * Miscellaneous booking information
    */
    'miscPnr'?: MiscInfo;
    'additionalMetadata'?: PnrDataAdditionalMetadata;
    /**
    * The per booking answers collected from the traveler during checkout.
    */
    'preBookAnswers'?: PreBookAnswers;
    /**
    * List of all the Custom Fields associated with this Pnr
    */
    'customFields'?: Array<CustomField>;
    /**
    * Change Log associated with a PNR/Booking
    */
    'bookingHistory'?: Array<BookingHistory>;
    /**
    * The total fare of the PNR inclusive of various components, for example: Flights, Seats,  Service fee for an Air Pnr; Hotel rooms, Hotel fee, Service for a Hotel PNR. 
    */
    'totalFare'?: Money;
    /**
    * The service fees associated with this pnr.
    */
    'serviceFees'?: Array<ServiceFee>;
    /**
    * FOP fare breakup for all payments
    */
    'paymentInfo'?: Array<PaymentInfo1>;
    /**
    * User facing status for this booking.
    */
    'bookingStatus'?: UserFacingStatus;
    /**
    * Set to true if there might be an issue in the PNR for which the user should be warned to contact TMC support. 
    */
    'contactSupport'?: boolean;
    /**
    * Represents the PNR visibility status, if marked as HIDDEN should not be displayed to the traveler
    */
    'travelerPnrVisibilityStatus'?: PnrData.TravelerPnrVisibilityStatusEnum;
    'shellPnrInfo'?: ShellPnrInfo;
    'pnrCreationDetails'?: PnrCreationDetails;
    /**
    * Approval related information for the PNR
    */
    'approvalInfo'?: Array<ApprovalInfo>;
    'cancellationRequestStatus'?: CancellationRequestStatus;
    'externalInfo'?: PnrDataExternalInfo;
    /**
    * Spotnana trip ID to which the PNR belongs to
    */
    'tripId'?: string;
    'documents'?: Array<Document>;
    'freshnessInfo'?: FreshnessInfo;
    'bookingEmailInfo'?: PnrCancelRequestBookingEmailInfo;
    'llfPnrInfo'?: LLFPnrInfo;
    /**
    * Spotnana PNR ID
    */
    'pnrId'?: string;
    /**
    * Invoice related information for the PNR
    */
    'invoiceInfos'?: Array<InvoiceInfo>;
    /**
    * Total fare amount of the PNR comprising components such as base fare and taxes. This field does not include any Service fees.
    */
    'totalFareAmount'?: FareAmount;
    /**
    * DK number attached to the PNR.
    */
    'dkNumber'?: string;
    'savingsFare'?: SavingsFare;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "version",
            "baseName": "version",
            "type": "number"
        },
        {
            "name": "createdVia",
            "baseName": "createdVia",
            "type": "CreatedVia"
        },
        {
            "name": "initialVersionCreatedVia",
            "baseName": "initialVersionCreatedVia",
            "type": "CreatedVia"
        },
        {
            "name": "sourceInfo",
            "baseName": "sourceInfo",
            "type": "SourceInfo"
        },
        {
            "name": "invoiceDelayedBooking",
            "baseName": "invoiceDelayedBooking",
            "type": "boolean"
        },
        {
            "name": "travelers",
            "baseName": "travelers",
            "type": "Array<Traveler>"
        },
        {
            "name": "pnrTravelers",
            "baseName": "pnrTravelers",
            "type": "Array<PnrTraveler>"
        },
        {
            "name": "costOfGoodsSold",
            "baseName": "costOfGoodsSold",
            "type": "COGS"
        },
        {
            "name": "costToCustomer",
            "baseName": "costToCustomer",
            "type": "CTC"
        },
        {
            "name": "isFinalized",
            "baseName": "isFinalized",
            "type": "boolean"
        },
        {
            "name": "policyInfo",
            "baseName": "policyInfo",
            "type": "PolicyInfo"
        },
        {
            "name": "airPnr",
            "baseName": "airPnr",
            "type": "Air"
        },
        {
            "name": "hotelPnr",
            "baseName": "hotelPnr",
            "type": "Hotel"
        },
        {
            "name": "carPnr",
            "baseName": "carPnr",
            "type": "Car"
        },
        {
            "name": "railPnr",
            "baseName": "railPnr",
            "type": "Rail"
        },
        {
            "name": "limoPnr",
            "baseName": "limoPnr",
            "type": "LimoInfo"
        },
        {
            "name": "miscPnr",
            "baseName": "miscPnr",
            "type": "MiscInfo"
        },
        {
            "name": "additionalMetadata",
            "baseName": "additionalMetadata",
            "type": "PnrDataAdditionalMetadata"
        },
        {
            "name": "preBookAnswers",
            "baseName": "preBookAnswers",
            "type": "PreBookAnswers"
        },
        {
            "name": "customFields",
            "baseName": "customFields",
            "type": "Array<CustomField>"
        },
        {
            "name": "bookingHistory",
            "baseName": "bookingHistory",
            "type": "Array<BookingHistory>"
        },
        {
            "name": "totalFare",
            "baseName": "totalFare",
            "type": "Money"
        },
        {
            "name": "serviceFees",
            "baseName": "serviceFees",
            "type": "Array<ServiceFee>"
        },
        {
            "name": "paymentInfo",
            "baseName": "paymentInfo",
            "type": "Array<PaymentInfo1>"
        },
        {
            "name": "bookingStatus",
            "baseName": "bookingStatus",
            "type": "UserFacingStatus"
        },
        {
            "name": "contactSupport",
            "baseName": "contactSupport",
            "type": "boolean"
        },
        {
            "name": "travelerPnrVisibilityStatus",
            "baseName": "travelerPnrVisibilityStatus",
            "type": "PnrData.TravelerPnrVisibilityStatusEnum"
        },
        {
            "name": "shellPnrInfo",
            "baseName": "shellPnrInfo",
            "type": "ShellPnrInfo"
        },
        {
            "name": "pnrCreationDetails",
            "baseName": "pnrCreationDetails",
            "type": "PnrCreationDetails"
        },
        {
            "name": "approvalInfo",
            "baseName": "approvalInfo",
            "type": "Array<ApprovalInfo>"
        },
        {
            "name": "cancellationRequestStatus",
            "baseName": "cancellationRequestStatus",
            "type": "CancellationRequestStatus"
        },
        {
            "name": "externalInfo",
            "baseName": "externalInfo",
            "type": "PnrDataExternalInfo"
        },
        {
            "name": "tripId",
            "baseName": "tripId",
            "type": "string"
        },
        {
            "name": "documents",
            "baseName": "documents",
            "type": "Array<Document>"
        },
        {
            "name": "freshnessInfo",
            "baseName": "freshnessInfo",
            "type": "FreshnessInfo"
        },
        {
            "name": "bookingEmailInfo",
            "baseName": "bookingEmailInfo",
            "type": "PnrCancelRequestBookingEmailInfo"
        },
        {
            "name": "llfPnrInfo",
            "baseName": "llfPnrInfo",
            "type": "LLFPnrInfo"
        },
        {
            "name": "pnrId",
            "baseName": "pnrId",
            "type": "string"
        },
        {
            "name": "invoiceInfos",
            "baseName": "invoiceInfos",
            "type": "Array<InvoiceInfo>"
        },
        {
            "name": "totalFareAmount",
            "baseName": "totalFareAmount",
            "type": "FareAmount"
        },
        {
            "name": "dkNumber",
            "baseName": "dkNumber",
            "type": "string"
        },
        {
            "name": "savingsFare",
            "baseName": "savingsFare",
            "type": "SavingsFare"
        }    ];

    static getAttributeTypeMap() {
        return PnrData.attributeTypeMap;
    }
}

export namespace PnrData {
    export enum TravelerPnrVisibilityStatusEnum {
        Visible = <any> 'VISIBLE',
        Hidden = <any> 'HIDDEN'
    }
}
