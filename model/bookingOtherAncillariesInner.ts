/**
 * Trip API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AncillaryFlightId } from './ancillaryFlightId';
import { AncillaryType } from './ancillaryType';
import { FareAmount } from './fareAmount';

export class BookingOtherAncillariesInner {
    'type': AncillaryType;
    /**
    * Index of leg to which this ancillary belongs. If an ancillary belongs to all legs, this index should be set to -1 
    */
    'legIndex'?: number;
    /**
    * Index of flight in it\'s leg to which this ancillary belongs. If an ancillary  belongs to all flights, this index should be set to -1 
    */
    'flightIndex'?: number;
    /**
    * Fare for this ancillary
    */
    'fare'?: FareAmount;
    /**
    * Status of this ancillary
    */
    'status': BookingOtherAncillariesInner.StatusEnum;
    'flightIds': Array<AncillaryFlightId>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "type",
            "baseName": "type",
            "type": "AncillaryType"
        },
        {
            "name": "legIndex",
            "baseName": "legIndex",
            "type": "number"
        },
        {
            "name": "flightIndex",
            "baseName": "flightIndex",
            "type": "number"
        },
        {
            "name": "fare",
            "baseName": "fare",
            "type": "FareAmount"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "BookingOtherAncillariesInner.StatusEnum"
        },
        {
            "name": "flightIds",
            "baseName": "flightIds",
            "type": "Array<AncillaryFlightId>"
        }    ];

    static getAttributeTypeMap() {
        return BookingOtherAncillariesInner.attributeTypeMap;
    }
}

export namespace BookingOtherAncillariesInner {
    export enum StatusEnum {
        AncillaryStatusUnknown = <any> 'ANCILLARY_STATUS_UNKNOWN',
        Confirmed = <any> 'CONFIRMED',
        Pending = <any> 'PENDING',
        Cancelled = <any> 'CANCELLED',
        Eligible = <any> 'ELIGIBLE',
        NotApplicable = <any> 'NOT_APPLICABLE'
    }
}
