/**
 * Trip API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { FareAmount } from './fareAmount';
import { FormOfPayment } from './formOfPayment';
import { SelectedPaymentSource } from './selectedPaymentSource';
import { UserId } from './userId';

/**
* This will contain the total fare of goods along with other charges like service fee. The price break down of goods should be added in PNR details, like airPnr 
*/
export class Payment {
    /**
    * The list of traveler indices on which this payment applies.
    */
    'travelerIndices': Array<number>;
    /**
    * The list of traveler user IDs on which this payment applies.
    */
    'userIds'?: Array<UserId>;
    /**
    * Total amount
    */
    'amount'?: FareAmount;
    'fop'?: FormOfPayment;
    /**
    * Reference number for original payment made for this service
    */
    'paymentReference'?: string;
    /**
    * Service for which this payment is made
    */
    'paymentType': Payment.PaymentTypeEnum;
    /**
    * Third party who is processing the payment
    */
    'paymentThirdParty'?: Payment.PaymentThirdPartyEnum;
    /**
    * The payment id for this transaction
    */
    'paymentId'?: string;
    /**
    * Third party payment gateway used to process the payment
    */
    'paymentGateway'?: Payment.PaymentGatewayEnum;
    /**
    * Whether the payment is refunded to the customer
    */
    'isRefunded'?: boolean;
    'selectedPaymentSource'?: SelectedPaymentSource;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "travelerIndices",
            "baseName": "travelerIndices",
            "type": "Array<number>"
        },
        {
            "name": "userIds",
            "baseName": "userIds",
            "type": "Array<UserId>"
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "FareAmount"
        },
        {
            "name": "fop",
            "baseName": "fop",
            "type": "FormOfPayment"
        },
        {
            "name": "paymentReference",
            "baseName": "paymentReference",
            "type": "string"
        },
        {
            "name": "paymentType",
            "baseName": "paymentType",
            "type": "Payment.PaymentTypeEnum"
        },
        {
            "name": "paymentThirdParty",
            "baseName": "paymentThirdParty",
            "type": "Payment.PaymentThirdPartyEnum"
        },
        {
            "name": "paymentId",
            "baseName": "paymentId",
            "type": "string"
        },
        {
            "name": "paymentGateway",
            "baseName": "paymentGateway",
            "type": "Payment.PaymentGatewayEnum"
        },
        {
            "name": "isRefunded",
            "baseName": "isRefunded",
            "type": "boolean"
        },
        {
            "name": "selectedPaymentSource",
            "baseName": "selectedPaymentSource",
            "type": "SelectedPaymentSource"
        }    ];

    static getAttributeTypeMap() {
        return Payment.attributeTypeMap;
    }
}

export namespace Payment {
    export enum PaymentTypeEnum {
        Unknown = <any> 'UNKNOWN',
        Flights = <any> 'FLIGHTS',
        ServiceFee = <any> 'SERVICE_FEE',
        Miscellaneous = <any> 'MISCELLANEOUS',
        Hotels = <any> 'HOTELS',
        Cars = <any> 'CARS',
        Rails = <any> 'RAILS',
        Limo = <any> 'LIMO',
        Misc = <any> 'MISC'
    }
    export enum PaymentThirdPartyEnum {
        UnknownParty = <any> 'UNKNOWN_PARTY',
        Stripe = <any> 'STRIPE',
        Tfpay = <any> 'TFPAY',
        Trainline = <any> 'TRAINLINE',
        Brex = <any> 'BREX',
        OutsideObt = <any> 'OUTSIDE_OBT'
    }
    export enum PaymentGatewayEnum {
        PaymentGatewayUnknown = <any> 'PAYMENT_GATEWAY_UNKNOWN',
        Stripe = <any> 'STRIPE',
        Brex = <any> 'BREX'
    }
}
