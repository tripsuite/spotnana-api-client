/**
 * Trip API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Cost } from './cost';
import { RailAncillary } from './railAncillary';
import { RailPnrJourneyInfo } from './railPnrJourneyInfo';
import { RailPnrLegInfo } from './railPnrLegInfo';
import { RailPnrSectionInfo } from './railPnrSectionInfo';
import { RailPnrTicket } from './railPnrTicket';
import { RailSearchType } from './railSearchType';
import { RailTicketDetail } from './railTicketDetail';
import { RateMetadata } from './rateMetadata';
import { TermsAndConditions } from './termsAndConditions';

/**
* Rail PNR information
*/
export class Rail {
    /**
    * Inward Journey.
    */
    'inwardJourney'?: RailPnrJourneyInfo;
    /**
    * List of legs covered in the booking.
    */
    'legInfos': Array<RailPnrLegInfo>;
    /**
    * Outward Journey.
    */
    'outwardJourney': RailPnrJourneyInfo;
    /**
    * Rate information of the journey.
    */
    'rate': Cost;
    /**
    * Price Metadata.
    */
    'rateMetadata'?: RateMetadata;
    'paymentMode'?: Rail.PaymentModeEnum;
    /**
    * List of sections covered in the itinerary.
    */
    'sections'?: Array<RailPnrSectionInfo>;
    /**
    * List of rail tickets.
    */
    'tickets'?: Array<RailPnrTicket>;
    'ticketDetails': Array<RailTicketDetail>;
    /**
    * Journey type.
    */
    'type': RailSearchType;
    /**
    * Rail confirmation number
    */
    'vendorConfirmationNumber': string;
    /**
    * Itinerary ID
    */
    'itineraryId'?: string;
    /**
    * Details of the selected ancillaries for the itinerary.
    */
    'ancillaries'?: Array<RailAncillary>;
    'termsAndConditions'?: TermsAndConditions;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "inwardJourney",
            "baseName": "inwardJourney",
            "type": "RailPnrJourneyInfo"
        },
        {
            "name": "legInfos",
            "baseName": "legInfos",
            "type": "Array<RailPnrLegInfo>"
        },
        {
            "name": "outwardJourney",
            "baseName": "outwardJourney",
            "type": "RailPnrJourneyInfo"
        },
        {
            "name": "rate",
            "baseName": "rate",
            "type": "Cost"
        },
        {
            "name": "rateMetadata",
            "baseName": "rateMetadata",
            "type": "RateMetadata"
        },
        {
            "name": "paymentMode",
            "baseName": "paymentMode",
            "type": "Rail.PaymentModeEnum"
        },
        {
            "name": "sections",
            "baseName": "sections",
            "type": "Array<RailPnrSectionInfo>"
        },
        {
            "name": "tickets",
            "baseName": "tickets",
            "type": "Array<RailPnrTicket>"
        },
        {
            "name": "ticketDetails",
            "baseName": "ticketDetails",
            "type": "Array<RailTicketDetail>"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "RailSearchType"
        },
        {
            "name": "vendorConfirmationNumber",
            "baseName": "vendorConfirmationNumber",
            "type": "string"
        },
        {
            "name": "itineraryId",
            "baseName": "itineraryId",
            "type": "string"
        },
        {
            "name": "ancillaries",
            "baseName": "ancillaries",
            "type": "Array<RailAncillary>"
        },
        {
            "name": "termsAndConditions",
            "baseName": "termsAndConditions",
            "type": "TermsAndConditions"
        }    ];

    static getAttributeTypeMap() {
        return Rail.attributeTypeMap;
    }
}

export namespace Rail {
    export enum PaymentModeEnum {
        PaymentFormUnknown = <any> 'PAYMENT_FORM_UNKNOWN',
        PrePaid = <any> 'PRE_PAID',
        PaidAtStation = <any> 'PAID_AT_STATION'
    }
}
