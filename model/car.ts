/**
 * Trip API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CancellationPolicy2 } from './cancellationPolicy2';
import { CarInfo } from './carInfo';
import { Cost } from './cost';
import { DateTimeLocal } from './dateTimeLocal';
import { PnrStatus } from './pnrStatus';

/**
* Car PNR information
*/
export class Car {
    /**
    * Car rental cancellation policy.
    */
    'cancellationPolicy'?: CancellationPolicy2;
    /**
    * Details of the car booked.
    */
    'carInfo': CarInfo;
    /**
    * Drop off date and time.
    */
    'dropOffDateTime': DateTimeLocal;
    /**
    * Payment type.
    */
    'paymentType'?: Car.PaymentTypeEnum;
    /**
    * Pickup date and time.
    */
    'pickupDateTime': DateTimeLocal;
    /**
    * Pnr status.
    */
    'pnrStatus'?: PnrStatus;
    /**
    * Car rental rate.
    */
    'rate': Cost;
    /**
    * Car confirmation number.
    */
    'vendorConfirmationNumber': string;
    /**
    * Sort order on the trips page
    */
    'sortingPriority'?: number;
    /**
    * Corporate id applied while booking
    */
    'corporateId'?: string;
    /**
    * Rate type of the car booked
    */
    'rateType'?: Car.RateTypeEnum;
    /**
    * Source status code of the pnr
    */
    'sourceStatus'?: string;
    /**
    * Cancellation id sent by the supplier.
    */
    'vendorCancellationId'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "cancellationPolicy",
            "baseName": "cancellationPolicy",
            "type": "CancellationPolicy2"
        },
        {
            "name": "carInfo",
            "baseName": "carInfo",
            "type": "CarInfo"
        },
        {
            "name": "dropOffDateTime",
            "baseName": "dropOffDateTime",
            "type": "DateTimeLocal"
        },
        {
            "name": "paymentType",
            "baseName": "paymentType",
            "type": "Car.PaymentTypeEnum"
        },
        {
            "name": "pickupDateTime",
            "baseName": "pickupDateTime",
            "type": "DateTimeLocal"
        },
        {
            "name": "pnrStatus",
            "baseName": "pnrStatus",
            "type": "PnrStatus"
        },
        {
            "name": "rate",
            "baseName": "rate",
            "type": "Cost"
        },
        {
            "name": "vendorConfirmationNumber",
            "baseName": "vendorConfirmationNumber",
            "type": "string"
        },
        {
            "name": "sortingPriority",
            "baseName": "sortingPriority",
            "type": "number"
        },
        {
            "name": "corporateId",
            "baseName": "corporateId",
            "type": "string"
        },
        {
            "name": "rateType",
            "baseName": "rateType",
            "type": "Car.RateTypeEnum"
        },
        {
            "name": "sourceStatus",
            "baseName": "sourceStatus",
            "type": "string"
        },
        {
            "name": "vendorCancellationId",
            "baseName": "vendorCancellationId",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Car.attributeTypeMap;
    }
}

export namespace Car {
    export enum PaymentTypeEnum {
        UnknownPaymentType = <any> 'UNKNOWN_PAYMENT_TYPE',
        PayAtVendor = <any> 'PAY_AT_VENDOR',
        Prepaid = <any> 'PREPAID'
    }
    export enum RateTypeEnum {
        Published = <any> 'PUBLISHED',
        Corporate = <any> 'CORPORATE',
        Spotnana = <any> 'SPOTNANA'
    }
}
