/**
 * Trip API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ActualPayment } from './actualPayment';
import { DateTimeOffset } from './dateTimeOffset';
import { ExchangePayment } from './exchangePayment';
import { Money } from './money';

/**
* Information on how the items have been paid for.
*/
export class PaymentInformation {
    /**
    * Payment reference ID.
    */
    'id'?: string;
    /**
    * Transaction timestamp.
    */
    'transactionTime'?: DateTimeOffset;
    /**
    * Amount paid.
    */
    'amount': Money;
    /**
    * Mode of Payment shown on invoice.
    */
    'paymentMode': PaymentInformation.PaymentModeEnum;
    /**
    * An identifier for the payment instrument used. For example, last four credit card number digits in case a credit card was used.
    */
    'paymentInstrumentIdentifier': string;
    /**
    * Details of how payment was done
    */
    'actualPayment'?: ActualPayment;
    /**
    * Details of how payment was done
    */
    'exchangePayment'?: ExchangePayment;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "transactionTime",
            "baseName": "transactionTime",
            "type": "DateTimeOffset"
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "Money"
        },
        {
            "name": "paymentMode",
            "baseName": "paymentMode",
            "type": "PaymentInformation.PaymentModeEnum"
        },
        {
            "name": "paymentInstrumentIdentifier",
            "baseName": "paymentInstrumentIdentifier",
            "type": "string"
        },
        {
            "name": "actualPayment",
            "baseName": "actualPayment",
            "type": "ActualPayment"
        },
        {
            "name": "exchangePayment",
            "baseName": "exchangePayment",
            "type": "ExchangePayment"
        }    ];

    static getAttributeTypeMap() {
        return PaymentInformation.attributeTypeMap;
    }
}

export namespace PaymentInformation {
    export enum PaymentModeEnum {
        CreditCard = <any> 'CREDIT_CARD',
        OnAccount = <any> 'ON_ACCOUNT',
        Direct = <any> 'DIRECT',
        Exchange = <any> 'EXCHANGE',
        BrexPoints = <any> 'BREX_POINTS',
        Cash = <any> 'CASH',
        QantasPoints = <any> 'QANTAS_POINTS',
        VendorProgramPayment = <any> 'VENDOR_PROGRAM_PAYMENT',
        AmadeusCheckout = <any> 'AMADEUS_CHECKOUT',
        PreviousBookingValue = <any> 'PREVIOUS_BOOKING_VALUE',
        FlightCredits = <any> 'FLIGHT_CREDITS'
    }
}
