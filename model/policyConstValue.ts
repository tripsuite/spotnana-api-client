/**
 * Trip API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { BoolWrapper } from './boolWrapper';
import { DoubleListWrapper } from './doubleListWrapper';
import { DoubleRange } from './doubleRange';
import { DoubleRangeWrapper } from './doubleRangeWrapper';
import { DoubleWrapper } from './doubleWrapper';
import { Int32Range } from './int32Range';
import { Int32RangeWrapper } from './int32RangeWrapper';
import { Int32Wrapper } from './int32Wrapper';
import { Int64Wrapper } from './int64Wrapper';
import { IntListWrapper } from './intListWrapper';
import { KeywordWithReasonListWrapper } from './keywordWithReasonListWrapper';
import { KeywordsWithReasonList } from './keywordsWithReasonList';
import { LegalEntityId } from './legalEntityId';
import { LegalEntityIdListWrapper } from './legalEntityIdListWrapper';
import { LegalEntityIdWrapper } from './legalEntityIdWrapper';
import { Length } from './length';
import { LengthWrapper } from './lengthWrapper';
import { Money } from './money';
import { MoneyWrapper } from './moneyWrapper';
import { OfficeId } from './officeId';
import { OfficeIdListWrapper } from './officeIdListWrapper';
import { OfficeIdWrapper } from './officeIdWrapper';
import { PercentageWrapper } from './percentageWrapper';
import { Persona } from './persona';
import { PersonaListWrapper } from './personaListWrapper';
import { PersonaWrapper } from './personaWrapper';
import { PostalAddress } from './postalAddress';
import { PostalAddressWrapper } from './postalAddressWrapper';
import { RatingWrapper } from './ratingWrapper';
import { StringListWrapper } from './stringListWrapper';
import { StringWrapper } from './stringWrapper';
import { TravelClassHierarchy } from './travelClassHierarchy';
import { TravelClassHierarchyWrapper } from './travelClassHierarchyWrapper';
import { UserOrgId } from './userOrgId';
import { UserOrgIdListWrapper } from './userOrgIdListWrapper';
import { UserOrgIdWrapper } from './userOrgIdWrapper';
import { WorkerType } from './workerType';
import { WorkerTypeListWrapper } from './workerTypeListWrapper';
import { WorkerTypeWrapper } from './workerTypeWrapper';

export class PolicyConstValue {
    'i'?: number;
    'l'?: number;
    's'?: string;
    'd'?: number;
    'b'?: boolean;
    'iList'?: Array<number>;
    'dList'?: Array<number>;
    'sList'?: Array<string>;
    'money'?: Money;
    'length'?: Length;
    'postalAddress'?: PostalAddress;
    'userOrgId'?: UserOrgId;
    'legalEntityId'?: LegalEntityId;
    'officeId'?: OfficeId;
    'userOrgIdList'?: Array<UserOrgId>;
    'legalEntityIdList'?: Array<LegalEntityId>;
    /**
    * A list of office IDs.
    */
    'officeIdList'?: Array<OfficeId>;
    'rating'?: number;
    'percentage'?: number;
    'iRange'?: Int32Range;
    'dRange'?: DoubleRange;
    'persona'?: Persona;
    'personaList'?: Array<Persona>;
    'railTravelClass'?: TravelClassHierarchy;
    'keywordWithReasonList'?: KeywordsWithReasonList;
    'workerType'?: WorkerType;
    'workerTypeList'?: Array<WorkerType>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "i",
            "baseName": "i",
            "type": "number"
        },
        {
            "name": "l",
            "baseName": "l",
            "type": "number"
        },
        {
            "name": "s",
            "baseName": "s",
            "type": "string"
        },
        {
            "name": "d",
            "baseName": "d",
            "type": "number"
        },
        {
            "name": "b",
            "baseName": "b",
            "type": "boolean"
        },
        {
            "name": "iList",
            "baseName": "iList",
            "type": "Array<number>"
        },
        {
            "name": "dList",
            "baseName": "dList",
            "type": "Array<number>"
        },
        {
            "name": "sList",
            "baseName": "sList",
            "type": "Array<string>"
        },
        {
            "name": "money",
            "baseName": "money",
            "type": "Money"
        },
        {
            "name": "length",
            "baseName": "length",
            "type": "Length"
        },
        {
            "name": "postalAddress",
            "baseName": "postalAddress",
            "type": "PostalAddress"
        },
        {
            "name": "userOrgId",
            "baseName": "userOrgId",
            "type": "UserOrgId"
        },
        {
            "name": "legalEntityId",
            "baseName": "legalEntityId",
            "type": "LegalEntityId"
        },
        {
            "name": "officeId",
            "baseName": "officeId",
            "type": "OfficeId"
        },
        {
            "name": "userOrgIdList",
            "baseName": "userOrgIdList",
            "type": "Array<UserOrgId>"
        },
        {
            "name": "legalEntityIdList",
            "baseName": "legalEntityIdList",
            "type": "Array<LegalEntityId>"
        },
        {
            "name": "officeIdList",
            "baseName": "officeIdList",
            "type": "Array<OfficeId>"
        },
        {
            "name": "rating",
            "baseName": "rating",
            "type": "number"
        },
        {
            "name": "percentage",
            "baseName": "percentage",
            "type": "number"
        },
        {
            "name": "iRange",
            "baseName": "iRange",
            "type": "Int32Range"
        },
        {
            "name": "dRange",
            "baseName": "dRange",
            "type": "DoubleRange"
        },
        {
            "name": "persona",
            "baseName": "persona",
            "type": "Persona"
        },
        {
            "name": "personaList",
            "baseName": "personaList",
            "type": "Array<Persona>"
        },
        {
            "name": "railTravelClass",
            "baseName": "railTravelClass",
            "type": "TravelClassHierarchy"
        },
        {
            "name": "keywordWithReasonList",
            "baseName": "keywordWithReasonList",
            "type": "KeywordsWithReasonList"
        },
        {
            "name": "workerType",
            "baseName": "workerType",
            "type": "WorkerType"
        },
        {
            "name": "workerTypeList",
            "baseName": "workerTypeList",
            "type": "Array<WorkerType>"
        }    ];

    static getAttributeTypeMap() {
        return PolicyConstValue.attributeTypeMap;
    }
}

export namespace PolicyConstValue {
}
