/**
 * Trip API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CounterLocation } from './counterLocation';
import { Latlng } from './latlng';
import { LocationContactInfo } from './locationContactInfo';
import { LocationOperatingSchedule } from './locationOperatingSchedule';
import { PostalAddress } from './postalAddress';

/**
* Pickup and drop-off location info.
*/
export class CarLocation {
    /**
    * Location address / airport code.
    */
    'address': PostalAddress;
    /**
    * Latitude and longitude of the location.
    */
    'coordinates'?: Latlng;
    /**
    * Counter location. If airport counter, set locationCode in address.
    */
    'counterLocation'?: CounterLocation;
    'contactInfo'?: LocationContactInfo;
    'operatingSchedule'?: LocationOperatingSchedule;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "address",
            "baseName": "address",
            "type": "PostalAddress"
        },
        {
            "name": "coordinates",
            "baseName": "coordinates",
            "type": "Latlng"
        },
        {
            "name": "counterLocation",
            "baseName": "counterLocation",
            "type": "CounterLocation"
        },
        {
            "name": "contactInfo",
            "baseName": "contactInfo",
            "type": "LocationContactInfo"
        },
        {
            "name": "operatingSchedule",
            "baseName": "operatingSchedule",
            "type": "LocationOperatingSchedule"
        }    ];

    static getAttributeTypeMap() {
        return CarLocation.attributeTypeMap;
    }
}

export namespace CarLocation {
}
