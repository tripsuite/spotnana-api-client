/**
 * Trip API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { FareOffers } from './fareOffers';
import { Flight } from './flight';
import { LegUpdates } from './legUpdates';
import { Preference } from './preference';
import { PreferredType } from './preferredType';
import { RateType } from './rateType';
import { ScheduleChangeInfo } from './scheduleChangeInfo';
import { TravelerRestrictions } from './travelerRestrictions';
import { UserFacingStatus } from './userFacingStatus';

/**
* Leg info
*/
export class Leg {
    /**
    * List of flights in this leg
    */
    'flights': Array<Flight>;
    /**
    * Brand name
    */
    'brandName'?: string;
    /**
    * 2 letter IATA airline code for validating airline
    */
    'validatingAirlineCode'?: string;
    /**
    * The leg status, which is supposed to be displayed to the end user.
    */
    'legStatus'?: UserFacingStatus;
    /**
    * This field sets the sorting priority of the leg to determine its order of display on the trips page 
    */
    'sortingPriority'?: number;
    /**
    * Per traveler list of restrictions such as loyalty, ktn edit etc.
    */
    'travelerRestrictions'?: Array<TravelerRestrictions>;
    /**
    * Fare offers for this leg including baggage, cancellation policy, etc
    */
    'fareOffers'?: Array<FareOffers>;
    /**
    * Identifier for leg
    */
    'legId'?: string;
    /**
    * Type of fare booked for this leg
    */
    'rateType'?: RateType;
    'legUpdates'?: LegUpdates;
    /**
    * Preference types for a leg, like org preferred, spotters choice, etc.
    */
    'preferredTypes'?: Array<PreferredType>;
    /**
    * Preference info for a leg, like org preferred, spotters choice, etc.
    */
    'preferences'?: Array<Preference>;
    'scheduleChangeInfo'?: ScheduleChangeInfo;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "flights",
            "baseName": "flights",
            "type": "Array<Flight>"
        },
        {
            "name": "brandName",
            "baseName": "brandName",
            "type": "string"
        },
        {
            "name": "validatingAirlineCode",
            "baseName": "validatingAirlineCode",
            "type": "string"
        },
        {
            "name": "legStatus",
            "baseName": "legStatus",
            "type": "UserFacingStatus"
        },
        {
            "name": "sortingPriority",
            "baseName": "sortingPriority",
            "type": "number"
        },
        {
            "name": "travelerRestrictions",
            "baseName": "travelerRestrictions",
            "type": "Array<TravelerRestrictions>"
        },
        {
            "name": "fareOffers",
            "baseName": "fareOffers",
            "type": "Array<FareOffers>"
        },
        {
            "name": "legId",
            "baseName": "legId",
            "type": "string"
        },
        {
            "name": "rateType",
            "baseName": "rateType",
            "type": "RateType"
        },
        {
            "name": "legUpdates",
            "baseName": "legUpdates",
            "type": "LegUpdates"
        },
        {
            "name": "preferredTypes",
            "baseName": "preferredTypes",
            "type": "Array<PreferredType>"
        },
        {
            "name": "preferences",
            "baseName": "preferences",
            "type": "Array<Preference>"
        },
        {
            "name": "scheduleChangeInfo",
            "baseName": "scheduleChangeInfo",
            "type": "ScheduleChangeInfo"
        }    ];

    static getAttributeTypeMap() {
        return Leg.attributeTypeMap;
    }
}

export namespace Leg {
}
