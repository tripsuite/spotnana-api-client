/**
 * Trip API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AirCancellationNotSupportedReason } from './airCancellationNotSupportedReason';
import { AirCancellationOption } from './airCancellationOption';
import { AirCancellationState } from './airCancellationState';
import { FareAmount } from './fareAmount';

/**
* Cancellation information for ticket. For non-ticketed PNRs, this represents the ticket that is in pending state. 
*/
export class TicketCancellationInfo {
    /**
    * Ticket number. For non-ticketed PNRs, this field will not be present.
    */
    'ticketNumber'?: string;
    /**
    * Type of ticket.
    */
    'ticketType': TicketCancellationInfo.TicketTypeEnum;
    /**
    * Fare of this ticket. For tickets created via exchange, it will be equal to add collect 
    */
    'ticketFare': FareAmount;
    /**
    * Current cancellation state for this ticket.
    */
    'cancellationState': AirCancellationState;
    /**
    * Cancellation options for this ticket. A ticket can have multiple options, like refunding ticket, converting ticket to flight credits. 
    */
    'cancellationOptions'?: Array<AirCancellationOption>;
    /**
    * Reasons why cancellation is not supported via OBT.
    */
    'cancellationNotSupportedReasons'?: Array<AirCancellationNotSupportedReason>;
    /**
    * If true, the ticket is not refundable and not exchangeable.
    */
    'isNonRefundableAndNonExchangeable'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "ticketNumber",
            "baseName": "ticketNumber",
            "type": "string"
        },
        {
            "name": "ticketType",
            "baseName": "ticketType",
            "type": "TicketCancellationInfo.TicketTypeEnum"
        },
        {
            "name": "ticketFare",
            "baseName": "ticketFare",
            "type": "FareAmount"
        },
        {
            "name": "cancellationState",
            "baseName": "cancellationState",
            "type": "AirCancellationState"
        },
        {
            "name": "cancellationOptions",
            "baseName": "cancellationOptions",
            "type": "Array<AirCancellationOption>"
        },
        {
            "name": "cancellationNotSupportedReasons",
            "baseName": "cancellationNotSupportedReasons",
            "type": "Array<AirCancellationNotSupportedReason>"
        },
        {
            "name": "isNonRefundableAndNonExchangeable",
            "baseName": "isNonRefundableAndNonExchangeable",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return TicketCancellationInfo.attributeTypeMap;
    }
}

export namespace TicketCancellationInfo {
    export enum TicketTypeEnum {
        Flight = <any> 'FLIGHT',
        Ancillary = <any> 'ANCILLARY'
    }
}
